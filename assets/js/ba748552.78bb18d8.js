"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1178],{4614:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>s,contentTitle:()=>c,default:()=>u,frontMatter:()=>a,metadata:()=>o,toc:()=>d});var n=t(5893),r=t(1151);const a={sidebar_position:1},c="Adaptative Concurrency Limiter",o={id:"guides/adaptative-concurreny-limiter/adaptative_concurrency_limiter",title:"Adaptative Concurrency Limiter",description:"In this section, we will learn how adaptative concurrency limiter works on LoadShedding.",source:"@site/docs/guides/adaptative-concurreny-limiter/adaptative_concurrency_limiter.md",sourceDirName:"guides/adaptative-concurreny-limiter",slug:"/guides/adaptative-concurreny-limiter/adaptative_concurrency_limiter",permalink:"/loadshedding/docs/guides/adaptative-concurreny-limiter/adaptative_concurrency_limiter",draft:!1,unlisted:!1,editUrl:"https://github.com/farfetch/loadhsedding/tree/main/website/docs/guides/adaptative-concurreny-limiter/adaptative_concurrency_limiter.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Adaptative Concurrency Limiter",permalink:"/loadshedding/docs/category/adaptative-concurrency-limiter"},next:{title:"Configuration",permalink:"/loadshedding/docs/guides/adaptative-concurreny-limiter/configuration"}},s={},d=[{value:"How it works",id:"how-it-works",level:2}];function l(e){const i={a:"a",code:"code",h1:"h1",h2:"h2",img:"img",li:"li",p:"p",strong:"strong",ul:"ul",...(0,r.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(i.h1,{id:"adaptative-concurrency-limiter",children:"Adaptative Concurrency Limiter"}),"\n",(0,n.jsxs)(i.p,{children:["In this section, we will learn how ",(0,n.jsx)(i.strong,{children:"adaptative concurrency limiter"})," works on LoadShedding."]}),"\n",(0,n.jsx)(i.p,{children:"The adaptative concurrency limiter provides a capacity to auto-adjust the accepted traffic based on the runtime performance, ensuring that latencies remain low."}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)(i.img,{alt:"Adaptative Concurrency Limiter",src:t(8288).Z+"",width:"738",height:"420"})}),"\n",(0,n.jsxs)(i.p,{children:["As can be seen in the previous image (adapted from ",(0,n.jsx)(i.a,{href:"https://netflixtechblog.medium.com/performance-under-load-3e6fa9a60581",children:"Performance Under Load Article"}),"):"]}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsx)(i.li,{children:"the requests are processed since the number of capacity + the number of queue slots is not reached."}),"\n",(0,n.jsx)(i.li,{children:"as soon as the maximum concurrency limit is reached (possible to configure), the requests will enter a queue."}),"\n",(0,n.jsx)(i.li,{children:"the requests that are waiting in the queue, will be released by a FIFO (First In, First Out) methodology, although, it is possible to configure prioritization accross requests, meaning, requests with high priority will be handled first."}),"\n",(0,n.jsxs)(i.li,{children:["as soon as the maximum queue size is reached, the system will automatically reject the following requests, returning a ",(0,n.jsx)(i.code,{children:"503 - Service Unavailable"})," error."]}),"\n",(0,n.jsx)(i.li,{children:"the latency will be kept low independent of the number of requests."}),"\n",(0,n.jsx)(i.li,{children:"the capacity/concurrency limit will be automatically calculated through some algorithms taking into account the service performance degradation."}),"\n"]}),"\n",(0,n.jsx)(i.h2,{id:"how-it-works",children:"How it works"}),"\n",(0,n.jsx)(i.p,{children:"The following animation shows requests being processed with LoadShedding:"}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)(i.img,{alt:"adaptative-concurrency-limiter-animation",src:t(9478).Z+"",width:"800",height:"730"})})]})}function u(e={}){const{wrapper:i}={...(0,r.a)(),...e.components};return i?(0,n.jsx)(i,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},9478:(e,i,t)=>{t.d(i,{Z:()=>n});const n=t.p+"assets/images/adaptative_concurrency_limiter_animation-c7a45293e9c9bd494f7dc392e4093f13.gif"},8288:(e,i,t)=>{t.d(i,{Z:()=>n});const n=t.p+"assets/images/concurrency_limiter_graph-d5e0af95f39cb144b8dd8139f1a3e4ae.png"},1151:(e,i,t)=>{t.d(i,{Z:()=>o,a:()=>c});var n=t(7294);const r={},a=n.createContext(r);function c(e){const i=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function o(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),n.createElement(a.Provider,{value:i},e.children)}}}]);